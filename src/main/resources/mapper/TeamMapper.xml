<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.example.repository.TeamMapper">

    <resultMap id="teamResultMap" type="org.example.domain.Team">
        <id column="id" property="id" />
        <result column="name" property="teamName" />
        <result column="created_at" property="createdAt" />
        <result column="updated_at" property="updatedAt" />
        <result column="is_deleted" property="isDeleted" />
    </resultMap>

    <select id="selectTeamByTeamName" resultMap="teamResultMap">
        select *
        from team
        where name = #{teamName} and is_deleted = false
    </select>

    <select id="getTeam" resultMap="teamResultMap">
        select t.id, t.name, count(tum.user_id) as numOfUsers, t.created_at, t.updated_at, t.is_deleted
        from team t
            left outer join team_user_mapping tum on t.id = tum.team_id
            left outer join user u on u.id = tum.user_id
        where t.id = #{id} and t.is_deleted = false
    </select>

    <insert id="createTeam" parameterType="org.example.domain.Team">
        insert into team
            (name)
        values (#{teamName})
        <selectKey resultType="Long" keyProperty="id" order="AFTER">
            SELECT LAST_INSERT_ID()
        </selectKey>
    </insert>

    <select id="getTeamList" resultMap="teamResultMap">
        select *
        from team
        where is_deleted = false
    </select>

    <update id="softDelete">
        update team set
                        is_deleted = #{isDeleted}
        where id = #{id}
    </update>

    <update id="updateTeam" parameterType="org.example.domain.Team">
        update team set
                        name = #{name}
        where id = #{id}
    </update>

</mapper>